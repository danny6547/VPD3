movingAverages: write test 
performanceData: Test for case of 0 dry dock dates
plotPerformnceData: Fix bug in name of graph in case of no vessel name information
# loadInfileDNVGLRaw: rename to loadInfileCSV, extract csv-relavant part, rewrite loadInfileDNVGLRaw with one input
connectDatabase: write function to connect to given database, return connection object.
connectDatabase: test
# validateCellStr: write function to return validateAttributes-style error message if all elements of input cell are not strings.
parseEcoInsightXLS: parse when aggregation is selected
cShip: repeat scalar inputs to uniform size
# cShip, cShipEngine: rename to cVessel_
# Ship Performance: rename repo to Vessel Performance
# Vessel Performance: Remove files unrelated to analysis of database values (ie. remove functions related to data insertion)
	#Move cVessel_ to Vessel Performance Database
	#Move convertEcoInsightXLS2tab  to Vessel Performance Database
	#Move insertDryDockDate  to Vessel Performance Database
	#Move loadInfile  to Vessel Performance Database
	#Move loadInfileDNVGLRaw  to Vessel Performance Database
	#Move parseEcoInsightXLS  to Vessel Performance Database
	#Move parseShipXLS  to Vessel Performance Database
	#Move plotForceTechXLS  to Vessel Performance Database
	#Move writeSQLLoadInFileTab  to Vessel Performance Database
# vesselName: look in table vessels instead of ships
# cVA.plotPerformanceData: change graph axes limits
# cVA.movingAverages: remove second input

Apply appropriate iteration to methods:
	regressions
	movingAverages
	
Delete file convertDate
Delete file annualAverages